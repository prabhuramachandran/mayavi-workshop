cells:

- markdown: |
    # The `mayavi2` application

    **Prabhu Ramachandran**

    **Department of Aerospace Engineering, IIT Bombay**
    <br/>

  metadata:
    slideshow:
      slide_type: slide

- markdown: |
    ## Outline

    - Overview
    - UI features
    - Command line arguments
    - `mlab` integration
    - Sources/Modules/Filter outline

  metadata:
    slideshow:
      slide_type: slide

- markdown: |
    ## Introduction

    * Visualization without scripting

    * Especially useful with data files

    * Can be scripted

    * Supports `mlab`

  metadata:
    slideshow:
      slide_type: slide

- markdown: |
    <img height="100%" src="MEDIA/m2/m2_app3_3.png"/>

  metadata:
    slideshow:
      slide_type: slide

- markdown: |
    ## Features

    * Complete UI
    * Powerful command line options
    * Embedded Python
    * Fully scriptable
    * Reads different file formats
    * Drag-drop onto shell
    * Script recording
    * Extensible
    * Plug-in design using Envisage

  metadata:
    slideshow:
      slide_type: slide

- markdown: |
    ## UI features

  metadata:
    slideshow:
      slide_type: slide

- markdown: |
    ## Demo of UI features

    * Basic UI

    * Python shell integration

    * Time-series support

    * Script recording

  metadata:
    slideshow:
      slide_type: slide

- markdown: |
    ## Command line arguments
    ### Overview

  metadata:
    slideshow:
      slide_type: slide

- code: |
    !mayavi2 -h

  id: 0

- markdown: |
    * `-d datafile.ext` : Load data file

    * `-f FilterName` : Load filter

    * `-m ModuleName` : Load module

    * `-s python-string` : Evaluate Python expression

    * `-x file.py` : Execute Python code


- markdown: |
    ## Advanced options

    * `-n` : new scene

    * `-M` : new module manager

    * `-o` : offscreen mode

    * `-z filename` : load saved visualization

  metadata:
    slideshow:
      slide_type: slide

- markdown: |
    ## Simple example

  metadata:
    slideshow:
      slide_type: slide

- code: |
    %cd data

  id: 1

- code: |
    !mayavi2 -d room_vis.wrl -d fire_ug.vtu -m Outline  -m ScalarCutPlane

  id: 2

- markdown: |
    ## Scripting from the command line

    * `-s python-code`  is very powerful

    * Takes Python expressions

    * Applies to the last module/filter

    * Can be called multiple times

  metadata:
    slideshow:
      slide_type: slide

- markdown: |
    ## An example

  metadata:
    slideshow:
      slide_type: slide

- code: |
    !mayavi2 -d fire_ug.vtu -m Outline -s "actor.property.color = (1,0,0)" \
     -s "scene.save('test.png', size=(800, 800))"

  id: 3

- markdown: |
    ## Bit more complex

  metadata:
    slideshow:
      slide_type: slide

- code: |
    !mayavi2 -d room_vis.wrl -d fire_ug.vtu \
     -m Outline  -m ScalarCutPlane \
    -s "enable_contours = True" \
    -s "implicit_plane.widget.normal_to_z_axis=1"

  id: 4

- markdown: |
    ## Exercise

    * Visualize the `fire_ug.vtu`  dataset along with the
      `room_vis.wrl`  file

    * Use one scalar cut plane with its normal along the y axis

    * Add an iso-contour with the temperature set to 400.

    * Do all these from the command line

    * Hint: use the embedded Python shell in the app

    * Hint: use script recording

  metadata:
    slideshow:
      slide_type: slide

- markdown: |
    ## Solution

  metadata:
    slideshow:
      slide_type: slide

- code: |
    !mayavi2 -d room_vis.wrl -d fire_ug.vtu \
     -m Outline  -m ScalarCutPlane \
    -s "enable_contours = True" \
    -s "implicit_plane.widget.normal_to_y_axis=1" \
    -m IsoSurface \
    -s "contour.contours=[400]"

  id: 5

- markdown: |
    ## `mlab` integration

  metadata:
    slideshow:
      slide_type: slide

- markdown: |
    ## Using `mlab`

    * Can import and use mlab

    * Opening data: `mlab.pipeline.open`
    * Add dataset: `mlab.pipeline.add_dataset`
    * Use `lower_case_with_underscores`
    * So `ScalarCutPlane`  $\rightarrow$ `mlab.pipeline.scalar_cut_plane`

  metadata:
    slideshow:
      slide_type: slide

# The lines below here may be deleted if you do not need them.
# ---------------------------------------------------------------------------
metadata:
  celltoolbar: Slideshow
  kernelspec:
    display_name: Python 3
    language: python
    name: python3
  language_info:
    codemirror_mode:
      name: ipython
      version: 3
    file_extension: .py
    mimetype: text/x-python
    name: python
    nbconvert_exporter: python
    pygments_lexer: ipython3
    version: 3.6.0
  livereveal:
    controls: true
    help: true
    scroll: true
    slideNumber: true
    transition: none
nbformat: 4
nbformat_minor: 2

# ---------------------------------------------------------------------------
data:
  [{execution_count: null, outputs: []}, {execution_count: null, outputs: []}, {execution_count: null,
      outputs: []}, {execution_count: null, outputs: []}, {execution_count: null, outputs: []},
    {execution_count: null, outputs: []}]
